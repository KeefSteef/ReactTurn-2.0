{"version":3,"sources":["Component/Analytics/Analytics.js","Component/Layout/Layout.js","redux/actionsType/actionsType.js","Component/Ui/Card/Card.js","redux/actions/actions.js","Component/Main/Main.js","Component/Priority/Priority.js","Component/Backdraw/Backdraw.js","Component/Ui/InfoCard/InfoCard.js","App.js","redux/clearArr.js","redux/rootReducer.js","reportWebVitals.js","index.js"],"names":["connect","state","statics","props","style","width","className","length","map","obj","name","point","result","id","Math","random","Layout","children","ADD_TO_STATICS","REDRAW_STATE_ELEMENT","dispatch","addToStore","type","payload","addToAnalytics","useState","isFinished","setFinished","visible","setVisible","time","currentTime","setTime","useEffect","interval","setInterval","console","log","clearInterval","newObj","timeToStart","floor","timer","window","setTimeout","tl","gsap","timeline","onComplete","clearTimeout","to","y","opacity","onClick","onFocus","Main","renderCard","arr","timeCheck","reducer","accumulator","currentValue","el","index","push","reduce","activeCard","persons","valid","this","Component","limitStatics","onClickHandler","bind","Backdraw","RedrawState","redrawFunction","changeOfResult","msg","temp","data","App","shadowToggle","toggleHandlerCard","setState","React","clearArr","oldArr","array","shift","initialState","drawToggle","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","action","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2fac1999.chunk.js","sourcesContent":["import React from 'react';\nimport './Analytics.sass'\nimport {connect} from \"react-redux\";\n\n\nconst Analytics = props => {\n    const cls = []\n    return (\n        <div style={{width: '50%'}}>\n            <section className=\"tableBlock\">\n                <ul className=\"table\">\n                    {props.statics.length > 0 ?\n                        props.statics.map(obj => {\n                            return <li key={obj.name + obj.id + Math.random()} className=\"table_item\">\n                                <div className=\"table_inf\">\n                                    <div className=\"table_icon\">\n                                         <i className=\"far fa-user\"></i>\n                                    </div>\n                                    <h3>{obj.name}</h3>\n                                    <h3>{obj.point}</h3>\n                                    <h3 className={obj.result === 'Good' ? 'good' : 'bad'}>{obj.result}</h3>\n                                </div>\n                       </li>\n                    })\n                        :\n                        <h1>Empty</h1>\n                    }\n                </ul>\n            </section>\n        </div>\n    );\n};\n\n\nfunction mapStateToProps(state){\n    return {\n        statics: state.statics\n    }\n}\n\nexport default connect(mapStateToProps)(Analytics);\n","import React from 'react';\nimport './Layout.sass'\n\nconst Layout = props => {\n    return (\n        <div className=\"Layout\">\n            {props.children}\n        </div>\n    );\n};\n\nexport default Layout;\n","export const ADD_TO_STATICS = 'ADD_TO_STATICS'\nexport const REDRAW_STATE_ELEMENT = 'REDRAW_STATE_ELEMENT'","import React,{useState,useEffect} from 'react';\nimport './Card.sass'\nimport gsap from 'gsap'\nimport {addToAnalytics} from \"../../../redux/actions/actions\";\nimport {connect} from \"react-redux\";\n\nconst Card = props => {\n    const [isFinished,setFinished] = useState(false);\n    const [visible, setVisible] = useState(true);\n    const [currentTime,setTime] = useState(props.time)\n    const [intervalMarker,setIntervalMarker] = useState(false);\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            console.log('popizdi')\n            setTime(currentTime - 1000)\n        }, 1000);\n        return () => clearInterval(interval);\n    }, []);\n\n\n    let newObj = {\n        id: props.id,\n        name: props.name,\n        point: props.point,\n        timeToStart: props.timeToStart ? props.timeToStart : props.time,\n        result: Math.floor(Math.random() * 10) >= 4 ? 'Good' : 'Bad'\n\n    }\n\n\n\n    if(visible === true){\n        let timer = window.setTimeout(()=>{\n            const tl = gsap.timeline({\n                onComplete: () => {\n                    props.addToStore(newObj)\n                    setFinished(true)\n                }\n            })\n            clearTimeout(timer)\n\n            tl.to(`.card${props.id}`, .5, {y: -20, opacity: 0})\n        },props.timeToStart)\n\n        setVisible(false)\n    }\n\n\n\n    return (\n            isFinished === true ? false :\n            <div className={`card${props.id} card`} onClick={props.onFocus}>\n                <div className=\"card_header\">\n                    <div className=\"card_options\">\n                        <div className=\"card_offer\">\n                            <h1 className=\"card_offer-title\">{props.point}</h1>\n                        </div>\n                        <div className=\"card_time\">\n                            <h1>{currentTime}</h1>\n                        </div>\n                    </div>\n                    <div className=\"card_number\">\n                        <p>{'№ ' + props.id}</p>\n                    </div>\n                </div>\n                <div className=\"card_main\">\n                    <div className=\"card_main-info\">\n                        <div className=\"card_main-info-img\">\n                            <i className=\"far fa-user\"></i>\n                            <div className=\"card_main_titles\">\n                                <h1>{props.name}</h1>\n                            </div>\n                        </div>\n                        <div className=\"card-main-status\">\n                        </div>\n                    </div>\n                </div>\n            </div>\n    );\n};\n\nfunction mapStateToProps(state){\n    return {\n        statics: state.statics\n    }\n}\n\nfunction mapDispatchToPropses(dispatch){\n    return {\n        addToStore: obj => dispatch(addToAnalytics(obj))\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToPropses)(Card);\n","import {ADD_TO_STATICS,REDRAW_STATE_ELEMENT} from \"../actionsType/actionsType\";\n\nexport function addToAnalytics(obj){\n    return {\n        type: ADD_TO_STATICS,\n        payload: obj\n    }\n}\n\nexport function redrawFunction(obj){\n    return{\n        type: REDRAW_STATE_ELEMENT,\n        payload: obj\n    }\n}\n","import React, {Component} from 'react';\nimport Card from \"../Ui/Card/Card\";\nimport './Main.sass'\nclass Main extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            activeCard:1,\n            persons: [\n                {\n                    name:'David',\n                    time:3000,\n                    point:'Passport Review',\n                    id:1,\n                    valid: true,\n                    isFinished:false\n                },\n                {\n                    name:'Andrea',\n                    time:4000,\n                    point:'Check on',\n                    id:2,\n                    valid: true,\n                    isFinished:false\n\n                },\n                {\n                    point:'Practice',\n                    name:'John',\n                    time:5000,\n                    id:3,\n                    valid: true,\n                    isFinished:false\n                },\n                {\n                    point:'Practice',\n                    name:'Pashkevich',\n                    time:2000,\n                    id:4,\n                    valid: true,\n                    isFinished:false\n                },\n                {\n                    point:'Practice',\n                    name:'Eric',\n                    time:6000,\n                    id:5,\n                    valid: true,\n                    isFinished:false\n                },\n                {\n                    point:'Practice',\n                    name:'Ilyusha',\n                    time:2000,\n                    id:6,\n                    valid: true,\n                    isFinished:false\n                },\n            ]\n        }\n\n    }\n\n\n\n    renderCard = (arr) => {\n        let timeCheck = []\n        const reducer = (accumulator, currentValue) => accumulator + currentValue;\n\n        return arr.map((el,index) => {\n            timeCheck.push(el.time);\n            return <Card time={el.time} key={el.id} timeToStart={timeCheck.reduce(reducer)} id={el.id} name={el.name} point={el.point}/>\n        })\n   }\n\n\n    render() {\n        return (\n           <div>\n               <div className={\"Nav\"}>\n                   {\n                       this.renderCard(this.state.persons)\n                   }\n               </div>\n           </div>\n        )\n    }\n}\n\nexport default Main;","import React from 'react';\nimport './Priority.sass'\nimport {connect} from \"react-redux\";\n\nconst Priority = props => {\n    return (\n        <div className=\"Priority\">\n            <section className=\"Priority_block\">\n                <ul className=\"Priority_menu\">\n                    {props.limitStatics.map(el => <li onClick={props.onClickHandler.bind(this,el)} key={el.name + Math.random()}>{el.name}</li>)}\n                </ul>\n            </section>\n        </div>\n    );\n};\n\nfunction mapStateToProps(state){\n    return {\n        limitStatics: state.limitStatics\n    }\n}\n\n\nexport default connect(mapStateToProps)(Priority);\n","import React from 'react';\nimport './Backdraw.sass'\n\nconst Backdraw = props => {\n    return (\n        <div onClick={props.onClickHandler} className=\"dark-bcg\">\n            {props.children}\n        </div>\n    );\n};\n\nexport default Backdraw;\n","import React from 'react';\nimport './InfoCard.sass'\nimport {connect} from \"react-redux\";\nimport {redrawFunction} from \"../../../redux/actions/actions\";\n\nconst InfoCard = props => {\n\n    const changeOfResult = (obj,msg) => {\n        let temp = [...props.statics];\n        temp[obj.id - 1].result = msg\n        props.RedrawState(temp)\n    }\n\n\n    return (\n        <div className=\"info_card\">\n            <h1>{props.data.name}</h1>\n            <div className=\"info_card-btn\">\n                <button onClick={() => changeOfResult(props.data,\"Good\")}>Good</button>\n                <button onClick={() => changeOfResult(props.data,\"Bad\")}>Bad</button>\n            </div>\n        </div>\n    );\n};\n\nfunction mapStateToProps(state){\n    return {\n        statics: state.statics\n    }\n}\n\nfunction mapReceiveToProps(dispatch){\n    return{\n        RedrawState: obj => dispatch(redrawFunction(obj))\n    }\n}\n\nexport default connect(mapStateToProps,mapReceiveToProps)(InfoCard);\n","import React from 'react'\nimport './App.css';\nimport Analytics from \"./Component/Analytics/Analytics\";\nimport Layout from './Component/Layout/Layout'\nimport Main from \"./Component/Main/Main\";\nimport Priority from \"./Component/Priority/Priority\";\nimport Backdraw from \"./Component/Backdraw/Backdraw\";\nimport {connect} from \"react-redux\";\nimport InfoCard from \"./Component/Ui/InfoCard/InfoCard\";\n\nclass App extends React.Component{\n    state = {\n        shadowToggle: false,\n        activeCard: {}\n    }\n\n    toggleHandlerCard = (obj) => {\n        this.setState({\n            shadowToggle: !this.state.shadowToggle,\n            activeCard: obj\n        })\n\n    }\n\n\n  render() {\n    return (\n        <div className=\"App\">\n            <Layout>\n                {this.state.shadowToggle ? <Backdraw onClickHandler={this.toggleHandlerCard}>\n                    <InfoCard data={this.state.activeCard}/>\n                </Backdraw> : null }\n                    <Main/>\n                    <hr/>\n                    <div className=\"container\">\n                        <Analytics/>\n                        <Priority onClickHandler={this.toggleHandlerCard} />\n                    </div>\n            </Layout>\n        </div>\n    );\n  }\n}\n\nfunction mapStateToPropsApp(state){\n    return{\n        statics: state.statics\n    }\n}\n\nexport default connect(mapStateToPropsApp)(App);\n","export function clearArr(oldArr){\n    let array = [...oldArr]\n    if(array.length > 3){\n        while (array.length > 3){\n            array.shift()\n        }\n    }\n    return [...array]\n}\n\n","import {ADD_TO_STATICS, REDRAW_STATE_ELEMENT} from \"./actionsType/actionsType\";\nimport {clearArr} from \"./clearArr\";\n\nconst initialState = {\n    statics: [],\n    limitStatics : [],\n    drawToggle: false\n}\nconst arr = [];\nexport function rootReducer(state = initialState, action){\n   switch (action.type){\n       case ADD_TO_STATICS:\n           arr.push(action.payload);\n           return {\n               statics: [...arr],\n               limitStatics: clearArr(arr)\n           }\n\n       case REDRAW_STATE_ELEMENT :\n           let array = [...state.statics];\n           array[action.payload.id - 1] = action.payload\n           return {\n               statics: array,\n               limitStatics: clearArr(arr)\n           }\n       default : return state\n   }\n}\n\n\n\n\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {Provider} from \"react-redux\";\nimport {createStore} from \"redux\";\nimport App from './App';\nimport {rootReducer} from \"./redux/rootReducer\";\nimport reportWebVitals from './reportWebVitals';\n\n\n\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n          document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}